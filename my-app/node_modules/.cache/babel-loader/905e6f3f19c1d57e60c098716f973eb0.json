{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JOSEPH\\\\Desktop\\\\project\\\\frameworks\\\\sportscore\\\\my-app\\\\src\\\\Components\\\\CompetitionHeader.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompetitionHeader = ({\n  fixtures\n}) => {\n  if (fixtures.length) {\n    return;\n  } else {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: fixtures.map((fixtures, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comp_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"competition_logo\",\n          children: \" comp thumbnail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"competition_name\",\n          children: \"competition ID - \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"league_group\",\n          children: \"league type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date\",\n          children: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CompetitionHeader;\nexport default CompetitionHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompetitionHeader\");","map":{"version":3,"sources":["C:/Users/JOSEPH/Desktop/project/frameworks/sportscore/my-app/src/Components/CompetitionHeader.jsx"],"names":["CompetitionHeader","fixtures","length","map","index"],"mappings":";;;AAGA,MAAMA,iBAAiB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAEtC,MAAIA,QAAQ,CAACC,MAAb,EAAwB;AACpB;AACH,GAFD,MAEO;AACH,WAAO,IAAP;AACH;;AAED,sBACI;AAAA,cACKD,QAAQ,CAACE,GAAT,CAAa,CAACF,QAAD,EAAWG,KAAX,KAAqB;AAC/B,0BAEJ;AAAmB,QAAA,SAAS,EAAG,aAA/B;AAAA,gCACI;AAAM,UAAA,SAAS,EAAG,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAG,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAM,UAAA,SAAS,EAAG,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAM,UAAA,SAAS,EAAG,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,SAAYA,KAAZ;AAAA;AAAA;AAAA;AAAA,cAFI;AASH,KAVA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAzBD;;KAAMJ,iB;AA2BN,eAAeA,iBAAf","sourcesContent":["\r\n\r\n\r\nconst CompetitionHeader = ({fixtures}) => {\r\n   \r\n    if (fixtures.length)    {\r\n        return\r\n    } else {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {fixtures.map((fixtures, index) => {\r\n                return (\r\n\r\n            <div key = {index} className = 'comp_header'>\r\n                <span className = 'competition_logo'> comp thumbnail</span>\r\n                <span className = 'competition_name'>competition ID - </span>\r\n                <span className = 'league_group'>league type</span>\r\n                <span className = 'date'>date</span>\r\n            </div>\r\n                )\r\n            })}\r\n        </div>\r\n            \r\n    )   \r\n    \r\n}\r\n\r\nexport default CompetitionHeader"]},"metadata":{},"sourceType":"module"}