{"ast":null,"code":"import { DateTime } from 'luxon';\nconst today = DateTime.now().weekday;\nconst yesterday = DateTime.now().minus({\n  days: 1\n}).weekday;\nconst twoDaysAgo = DateTime.now().minus({\n  days: 2\n}).weekday;\nconst tomorrow = DateTime.now().plus({\n  days: 1\n}).weekday;\nconst dayAfterTomorrow = DateTime.now().plus({\n  days: 2\n}).weekday;\n\nconst AppendToday = () => {\n  switch (today) {\n    case 0:\n      return 'SUN';\n      break;\n\n    case 1:\n      return 'MON';\n      break;\n\n    case 2:\n      return 'TUE';\n      break;\n\n    case 3:\n      return 'WED';\n      break;\n\n    case 4:\n      return 'THUR';\n      break;\n\n    case 5:\n      return 'FRI';\n      break;\n\n    case 6:\n      return 'SAT';\n      break;\n\n    default:\n      break;\n  }\n};\n\n_c = AppendToday;\n\nconst AppendTomorrow = () => {\n  switch (tomorrow) {\n    case 0:\n      return 'SUN';\n      break;\n\n    case 1:\n      return 'MON';\n      break;\n\n    case 2:\n      return 'TUE';\n      break;\n\n    case 3:\n      return 'WED';\n      break;\n\n    case 4:\n      return 'THUR';\n      break;\n\n    case 5:\n      return 'FRI';\n      break;\n\n    case 6:\n      return 'SAT';\n      break;\n\n    default:\n      break;\n  }\n};\n\n_c2 = AppendTomorrow;\n\nconst NextTomorrow = () => {\n  switch (dayAfterTomorrow) {\n    case 0:\n      return 'SUN';\n      break;\n\n    case 1:\n      return 'MON';\n      break;\n\n    case 2:\n      return 'TUE';\n      break;\n\n    case 3:\n      return 'WED';\n      break;\n\n    case 4:\n      return 'THUR';\n      break;\n\n    case 5:\n      return 'FRI';\n      break;\n\n    case 6:\n      return 'SAT';\n      break;\n\n    default:\n      break;\n  }\n};\n\n_c3 = NextTomorrow;\n\nconst Yesterday = () => {\n  switch (yesterday) {\n    case 0:\n      return 'SUN';\n      break;\n\n    case 1:\n      return 'MON';\n      break;\n\n    case 2:\n      return 'TUE';\n      break;\n\n    case 3:\n      return 'WED';\n      break;\n\n    case 4:\n      return 'THUR';\n      break;\n\n    case 5:\n      return 'FRI';\n      break;\n\n    case 6:\n      return 'SAT';\n      break;\n\n    default:\n      break;\n  }\n};\n\n_c4 = Yesterday;\n\nconst TwoDaysAgo = () => {\n  switch (twoDaysAgo) {\n    case 0:\n      return 'SUN';\n      break;\n\n    case 1:\n      return 'MON';\n      break;\n\n    case 2:\n      return 'TUE';\n      break;\n\n    case 3:\n      return 'WED';\n      break;\n\n    case 4:\n      return 'THUR';\n      break;\n\n    case 5:\n      return 'FRI';\n      break;\n\n    case 6:\n      return 'SAT';\n      break;\n\n    default:\n      break;\n  }\n};\n\n_c5 = TwoDaysAgo;\nexport { TwoDaysAgo, AppendToday, Yesterday, NextTomorrow, AppendTomorrow };\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"AppendToday\");\n$RefreshReg$(_c2, \"AppendTomorrow\");\n$RefreshReg$(_c3, \"NextTomorrow\");\n$RefreshReg$(_c4, \"Yesterday\");\n$RefreshReg$(_c5, \"TwoDaysAgo\");","map":{"version":3,"sources":["C:/Users/JOSEPH/Desktop/project/frameworks/sportscore/my-app/src/Utils/AppendDay.jsx"],"names":["DateTime","today","now","weekday","yesterday","minus","days","twoDaysAgo","tomorrow","plus","dayAfterTomorrow","AppendToday","AppendTomorrow","NextTomorrow","Yesterday","TwoDaysAgo"],"mappings":"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","sourcesContent":["\r\nimport { DateTime } from 'luxon'\r\n\r\n\r\nconst today = DateTime.now().weekday\r\nconst yesterday = DateTime.now().minus({days: 1}).weekday\r\nconst twoDaysAgo = DateTime.now().minus({days: 2}).weekday\r\nconst tomorrow = DateTime.now().plus({days: 1}).weekday\r\nconst dayAfterTomorrow = DateTime.now().plus({days: 2}).weekday\r\n\r\nconst AppendToday = () => {\r\n\r\n    switch (today) {\r\n        case 0:\r\n            return 'SUN'\r\n            break;\r\n        case 1:\r\n            return 'MON'\r\n            break;\r\n        case 2:\r\n            return 'TUE'\r\n            break;\r\n        case 3:\r\n            return 'WED'\r\n            break;\r\n        case 4:\r\n            return 'THUR'\r\n            break;\r\n        case 5:\r\n            return 'FRI'\r\n            break;\r\n        case 6:\r\n            return 'SAT'\r\n            break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n\r\n}\r\n  \r\n\r\nconst AppendTomorrow = ()  => {\r\n    switch (tomorrow) {\r\n        case 0:\r\n            return 'SUN'\r\n            break;\r\n        case 1:\r\n            return 'MON'\r\n            break;\r\n        case 2:\r\n            return 'TUE'\r\n            break;\r\n        case 3:\r\n            return 'WED'\r\n            break;\r\n        case 4:\r\n            return 'THUR'\r\n            break;\r\n        case 5:\r\n            return 'FRI'\r\n            break;\r\n        case 6:\r\n            return 'SAT'\r\n            break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n} \r\n\r\nconst NextTomorrow = ()  => {\r\n    switch (dayAfterTomorrow) {\r\n        case 0:\r\n            return 'SUN'\r\n            break;\r\n        case 1:\r\n            return 'MON'\r\n            break;\r\n        case 2:\r\n            return 'TUE'\r\n            break;\r\n        case 3:\r\n            return 'WED'\r\n            break;\r\n        case 4:\r\n            return 'THUR'\r\n            break;\r\n        case 5:\r\n            return 'FRI'\r\n            break;\r\n        case 6:\r\n            return 'SAT'\r\n            break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n} \r\n\r\nconst Yesterday = () =>  {\r\n    switch (yesterday) {\r\n        case 0:\r\n            return 'SUN'\r\n            break;\r\n        case 1:\r\n            return 'MON'\r\n            break;\r\n        case 2:\r\n            return 'TUE'\r\n            break;\r\n        case 3:\r\n            return 'WED'\r\n            break;\r\n        case 4:\r\n            return 'THUR'\r\n            break;\r\n        case 5:\r\n            return 'FRI'\r\n            break;\r\n        case 6:\r\n            return 'SAT'\r\n            break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n}   \r\n\r\nconst TwoDaysAgo = ()  => {\r\n    switch (twoDaysAgo) {\r\n        case 0:\r\n            return 'SUN'\r\n            break;\r\n        case 1:\r\n            return 'MON'\r\n            break;\r\n        case 2:\r\n            return 'TUE'\r\n            break;\r\n        case 3:\r\n            return 'WED'\r\n            break;\r\n        case 4:\r\n            return 'THUR'\r\n            break;\r\n        case 5:\r\n            return 'FRI'\r\n            break;\r\n        case 6:\r\n            return 'SAT'\r\n            break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n}\r\nexport { TwoDaysAgo, AppendToday, Yesterday, NextTomorrow, AppendTomorrow  }  "]},"metadata":{},"sourceType":"module"}