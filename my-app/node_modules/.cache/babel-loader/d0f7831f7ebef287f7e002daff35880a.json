{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JOSEPH\\\\Desktop\\\\project\\\\frameworks\\\\sportscore\\\\my-app\\\\src\\\\Components\\\\CompetitionHeader.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\nimport { AppendToday } from '../Utils/AppendDay';\nimport { Link } from 'react-router-dom';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompetitionHeader = ({\n  fixtures\n}) => {\n  _s();\n\n  const [allLeagues, SetAllLeagues] = React.useState([]);\n  const [countries, setCountries] = React.useState([]);\n  const [matches, setMatches] = React.useState([]);\n  console.log({\n    fixtures\n  });\n  const setIdResponse = new Set();\n  useDeepCompareEffect(() => {\n    const setCountriesObj = new Set();\n\n    for (let i = 0; i < fixtures.length; i++) {\n      const element = fixtures[i].league.country;\n      setCountriesObj.add(element);\n    }\n\n    const countriesArr = Array.from(setCountriesObj);\n    setCountries(countriesArr);\n    console.log('countriesArr', countriesArr);\n    const setMatchesObj = new Set();\n\n    for (let i = 0; i < fixtures.length; i++) {\n      const element = fixtures[i];\n      setMatchesObj.add(element);\n    }\n\n    const matchesArr = Array.from(setMatchesObj);\n    setMatches(matchesArr);\n    console.log('matches', matches);\n\n    for (let i = 0; i < fixtures.length; i++) {\n      const element = fixtures[i].league.id;\n      setIdResponse.add(element);\n    }\n\n    console.log(setIdResponse);\n    const uniqueIds = Array.from(setIdResponse); // console.log(uniqueIds);\n\n    const sortedLeagues = [];\n\n    for (let i = 0; i < uniqueIds.length; i++) {\n      const id = uniqueIds[i];\n      const leagueObj = {\n        leagueName: fixtures[i].league.name,\n        leagueFlag: fixtures[i].league.flag,\n        leagueRound: fixtures[i].league.round,\n        leagueCountry: fixtures[i].league.country,\n        matches: []\n      };\n      const arrOfObj = fixtures.filter(fixture => {\n        if (fixture.league.id !== id) return;\n        return fixture.teams;\n      });\n      leagueObj.matches = arrOfObj;\n      sortedLeagues.push(leagueObj);\n    }\n\n    SetAllLeagues(sortedLeagues);\n  }, [allLeagues, fixtures, setIdResponse, countries, matches]);\n  console.log(allLeagues);\n\n  const Content = () => (countries === null || countries === void 0 ? void 0 : countries.length) && countries.map(country => {\n    return allLeagues.map((league, index) => {\n      if (league.leagueCountry !== country) return;\n      return matches.map((match, subIndex) => {\n        if (match.leagueName !== league) return;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fixtures_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comp_header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"img_container\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"competition_logo\",\n                  src: match.leagueFlag,\n                  alt: `flag of ${match.leagueCountry}`,\n                  width: \"20\",\n                  height: \"15\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                className: \"competition_name\",\n                children: match.leagueCountry\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                className: \"league_group\",\n                children: [match.leagueName, \" - \", match.leagueRound]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"date\",\n                children: AppendToday()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fixtures\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"live_match\",\n                style: {\n                  backgroundColor: match.fixture.status.elapsed && match.fixture.status.long !== 'Match Finished' ? 'orange' : 'black'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"timestamp\",\n                children: match.fixture.status.long === 'Not Started' ? '' : match.fixture.status.long === 'Time to be defined' ? '' : match.fixture.status.long === 'Match Postponed' ? 'postp' : match.fixture.status.long === 'Match Finished' ? 'FT' : `${match.fixture.status.elapsed}'`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"teamOne_teamTwo_scoreSheet\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"teams\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"team\",\n                    children: match.teams.home.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 47\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"score\",\n                    children: match.fixture.status.long === 'Not Started' ? '?' : match.fixture.status.long === 'Match Finished' ? match.goals.home : match.fixture.status.elapsed ? match.goals.home : '?'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 47\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 43\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"teams\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"team\",\n                    children: match.teams.away.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 47\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"score\",\n                    children: match.fixture.status.long === 'Not Started' ? '?' : match.fixture.status.long === 'Match Finished' ? match.goals.away : match.fixture.status.elapsed ? match.goals.away : '?'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 47\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 43\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"star\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faStar\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 37\n              }, this)]\n            }, subIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 30\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this);\n      });\n    });\n  });\n\n  if (!fixtures.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No events available right now\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 34\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CompetitionHeader, \"bp3lAI6LAKvQnG9SVtHPJRgHqEA=\", false, function () {\n  return [useDeepCompareEffect];\n});\n\n_c = CompetitionHeader;\nexport default CompetitionHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompetitionHeader\");","map":{"version":3,"sources":["C:/Users/JOSEPH/Desktop/project/frameworks/sportscore/my-app/src/Components/CompetitionHeader.jsx"],"names":["React","FontAwesomeIcon","faStar","AppendToday","Link","useDeepCompareEffect","CompetitionHeader","fixtures","allLeagues","SetAllLeagues","useState","countries","setCountries","matches","setMatches","console","log","setIdResponse","Set","setCountriesObj","i","length","element","league","country","add","countriesArr","Array","from","setMatchesObj","matchesArr","id","uniqueIds","sortedLeagues","leagueObj","leagueName","name","leagueFlag","flag","leagueRound","round","leagueCountry","arrOfObj","filter","fixture","teams","push","Content","map","index","match","subIndex","backgroundColor","status","elapsed","long","home","goals","away"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faStar} from '@fortawesome/free-solid-svg-icons'\r\nimport {AppendToday} from '../Utils/AppendDay'\r\nimport { Link } from 'react-router-dom'\r\nimport useDeepCompareEffect from 'use-deep-compare-effect'\r\n\r\nconst CompetitionHeader = ({fixtures}) => {\r\n    const [allLeagues, SetAllLeagues] = React.useState([])\r\n    const [countries, setCountries] = React.useState([])\r\n    const [matches, setMatches] = React.useState([])\r\n\r\n    console.log({fixtures})\r\n    const setIdResponse = new Set()\r\n\r\n    \r\n    useDeepCompareEffect(() => {\r\n        const setCountriesObj = new Set()\r\n        for (let i=0; i<fixtures.length; i++)   {\r\n            const element = fixtures[i].league.country\r\n            setCountriesObj.add(element)\r\n        }\r\n        const countriesArr = Array.from(setCountriesObj)\r\n        setCountries(countriesArr)\r\n        console.log( 'countriesArr',countriesArr)\r\n    \r\n        const setMatchesObj = new Set()\r\n        for (let i=0; i<fixtures.length; i++)   {\r\n            const element = fixtures[i]\r\n            setMatchesObj.add(element)\r\n        }\r\n        const matchesArr = Array.from(setMatchesObj)\r\n        setMatches(matchesArr)\r\n        console.log('matches', matches)\r\n\r\n        for (let i = 0; i < fixtures.length; i++)   {\r\n            const element = fixtures[i].league.id\r\n            setIdResponse.add(element)\r\n        }\r\n        console.log(setIdResponse)\r\n\r\n        const uniqueIds = Array.from(setIdResponse)\r\n        // console.log(uniqueIds);\r\n        const sortedLeagues = [];\r\n        for (let i=0; i<uniqueIds.length; i++) {\r\n        const id = uniqueIds[i];\r\n        const leagueObj = {leagueName:  fixtures[i].league.name,\r\n            leagueFlag: fixtures[i].league.flag,\r\n            leagueRound:    fixtures[i].league.round,\r\n            leagueCountry:  fixtures[i].league.country,\r\n            matches: []\r\n                            }\r\n        const arrOfObj = fixtures.filter(fixture => {\r\n            if (fixture.league.id !== id)   return\r\n            return fixture.teams;\r\n        });\r\n        leagueObj.matches = arrOfObj\r\n        sortedLeagues.push(leagueObj)\r\n        \r\n        \r\n    }\r\n    SetAllLeagues(sortedLeagues)\r\n    \r\n    \r\n    }, [allLeagues, fixtures, setIdResponse, countries, matches])\r\n    \r\n    console.log(allLeagues)\r\n    const Content = () => countries?.length && countries.map((country) => {\r\n        \r\n        return allLeagues.map((league, index) => {\r\n            if (league.leagueCountry !== country) return;\r\n           return matches.map((match, subIndex) => {\r\n                if (match.leagueName !== league) return;\r\n                return (\r\n                    <div>\r\n                        <div key={index} className='fixtures_container'>\r\n                             <div className='comp_header'>\r\n                                 <div className='img_container'>\r\n                                    <img \r\n                                    className='competition_logo'\r\n                                    src={match.leagueFlag}\r\n                                    alt={`flag of ${match.leagueCountry}`}\r\n                                    width='20' height='15'\r\n                                    />\r\n                                 </div> \r\n                                 <Link  className='competition_name'>{match.leagueCountry}</Link>\r\n                                 <Link className='league_group'>{match.leagueName} - {match.leagueRound}</Link>\r\n                                 <span className='date'>{AppendToday()}</span>\r\n                             </div>\r\n                             <div key={subIndex} className='fixtures'>\r\n                                    <div className='live_match' style={{backgroundColor: match.fixture.status.elapsed \r\n                                                        && match.fixture.status.long !== 'Match Finished' \r\n                                                        ? 'orange' : 'black'}}></div>\r\n                                    <div className='timestamp'>{match.fixture.status.long === 'Not Started' ? ''\r\n                                                :match.fixture.status.long === 'Time to be defined' ? ''\r\n                                                :match.fixture.status.long === 'Match Postponed' ? 'postp'\r\n                                                :match.fixture.status.long === 'Match Finished' ? 'FT'\r\n                                                : `${match.fixture.status.elapsed}'`}\r\n                                    </div>\r\n                                    <div className='teamOne_teamTwo_scoreSheet'> \r\n                                          <div className='teams'>\r\n                                              <div className='team'>{match.teams.home.name}</div>\r\n                                              <div className='score'>{match.fixture.status.long === 'Not Started' ? '?'\r\n                                                    : match.fixture.status.long === 'Match Finished' ? match.goals.home\r\n                                                    : match.fixture.status.elapsed ? match.goals.home\r\n                                                    : '?'}\r\n                                              </div>\r\n                                          </div>\r\n                                          <div className='teams'>\r\n                                              <div className='team'>{match.teams.away.name}</div>\r\n                                              <div className='score'>{match.fixture.status.long === 'Not Started' ? '?'\r\n                                                    : match.fixture.status.long === 'Match Finished' ? match.goals.away\r\n                                                    : match.fixture.status.elapsed ? match.goals.away\r\n                                                    : '?'}\r\n                                              </div>\r\n                                          </div>\r\n                                    </div>\r\n                                    <div className='star'>\r\n                                         <FontAwesomeIcon icon = {faStar} />\r\n                                    </div>\r\n                             </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        }) \r\n    })  \r\n\r\n\r\n    if (!fixtures.length) return <div>No events available right now</div>;\r\n    return <Content />\r\n\r\n}\r\n\r\nexport default CompetitionHeader"]},"metadata":{},"sourceType":"module"}